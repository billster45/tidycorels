% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{tidy_corels}
\alias{tidy_corels}
\title{tidy_corels}
\usage{
tidy_corels(df, outcome_cols, ...)
}
\arguments{
\item{df}{The dataframe to generate rules from. Applies the function corels::corels().}

\item{outcome_cols}{The two columns in df that represent the label. Corels expects two columns representing each class. Consider using recipes::step_dummy() to convert outcome to two columns.}

\item{...}{Set any of the arguments imported from corels::corels(). The following arguments are fixed by tidy_corels(): rules_file (generated from df), labels_file (generated from df), log_dir (set as tempdir()), verbosity_policy (set as "minor").}
}
\description{
The tidy_corels() function converts your dataframe into the text file format corels::corels() expects. Returns a list of R objects including: both the Corels rules and converted to dplyr::case_when() format, your datafame with the label geneated by the rules, an alluvial plot of the rules applied to your dataframe.
}
\details{
All variables must contain 0 or 1. Consider using recipes::step_dummy() to convert categorical variables to dummy columns. If variable is continous (e.g. age), consider using recipes::step_discretize() before recipes::step_dummy().

The names of the two outcome columns in outcome_cols argument must end in 0 and 1.
Consider using recipes::step_integer(recipes::all_outcomes(), zero_based = TRUE) to convert outcome values to 0/1 before using recipes::step_dummy() to create the two outcome columns Corels requires.
}
\examples{
# See <https://github.com/billster45/tidycorels/blob/master/README.md>
}
